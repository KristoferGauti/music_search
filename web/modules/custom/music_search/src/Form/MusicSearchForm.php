<?php
namespace Drupal\music_search\Form;

use Drupal\Core\Form\ConfigFormBase;
use Drupal\Core\Form\FormBase;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Url;
use Drupal\music_search\SpotifySearchService;
use http\Env\Response;
use Symfony\Component\DependencyInjection\ContainerInterface;

/**
 * Class MusicSearchForm
 *
 * @package Drupal\music_search\Form
 */
class MusicSearchForm extends ConfigFormBase {

  /**
   * {@inheritDoc}
   */
  protected function getEditableConfigNames() {
    return ["music_search.search"];
  }

  /**
   * {@inheritDoc}
   */
  public function getFormId() {
    return "music_search_form";
  }

  /**
   * {@inheritDoc}
   */
  public function buildForm(array $form, FormStateInterface $form_state) {
    $form["search_field"] = [
      "#type" => "textfield",
      "#title" => $this->t("Search"),
      "#description" => $this->t("Please provide an artist name, album name or song name to search"),
      "#autocomplete_route_name" => "music_search.autocomplete"
    ];
    $form['search_type'] = array(
      '#type' => 'radios',
      '#title' => t('Type'),
      '#options' => [
        t('Artist'),
        t('Album'),
        t('Track'),
      ]);
    $form["Search"] = [
      "#type" => "submit",
      "#value" => "Search"
    ];
    return $form;
  }

  /**
   * {@inheritDoc}
   */
  public function submitForm(array &$form, FormStateInterface $form_state) {
    $radio_index = $form_state->getValue("search_type");
    $radio_value = "";
    switch ($radio_index) {
      case 0:
        $radio_value = "artist";
        break;
      case 1:
        $radio_value = "album";
        break;
      case 2:
        $radio_value = "track";
    }
    $this->config("music_search.search")
      ->set("spotify_search", $form_state->getValue("search_field"))
      ->set("rad_val", $radio_value)
      ->save();
    $form_state->setRedirectUrl(Url::fromUri('internal:/search_results'));
    parent::submitForm($form, $form_state);
  }

  /**
   * {@inheritDoc}
   */
  public function validateForm(array &$form, FormStateInterface $form_state) {
    //Do later!!!!
    parent::validateForm($form, $form_state); // TODO: Change the autogenerated stub
  }

}
